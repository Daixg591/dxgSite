<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shahenpc.system.mapper.special.SpecialWorkMapper">
    
    <resultMap type="SpecialWork" id="SpecialWorkResult">
        <result property="specialId"    column="special_id"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="title"    column="title"    />
        <result property="content"    column="content"    />
    </resultMap>

    <sql id="selectSpecialWorkVo">
        select special_id, remark, create_by, create_time, update_by, update_time, title, content from special_work
    </sql>

    <select id="selectSpecialWorkList" parameterType="SpecialWork" resultMap="SpecialWorkResult">
        <include refid="selectSpecialWorkVo"/>
        <where>  
            <if test="title != null  and title != ''"> and title = #{title}</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
        </where>
    </select>
    
    <select id="selectSpecialWorkBySpecialId" parameterType="Long" resultMap="SpecialWorkResult">
        <include refid="selectSpecialWorkVo"/>
        where special_id = #{specialId}
    </select>
        
    <insert id="insertSpecialWork" parameterType="SpecialWork" useGeneratedKeys="true" keyProperty="specialId">
        insert into special_work
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="remark != null">remark,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="title != null">title,</if>
            <if test="content != null">content,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="title != null">#{title},</if>
            <if test="content != null">#{content},</if>
         </trim>
    </insert>

    <update id="updateSpecialWork" parameterType="SpecialWork">
        update special_work
        <trim prefix="SET" suffixOverrides=",">
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
        </trim>
        where special_id = #{specialId}
    </update>

    <delete id="deleteSpecialWorkBySpecialId" parameterType="Long">
        delete from special_work where special_id = #{specialId}
    </delete>

    <delete id="deleteSpecialWorkBySpecialIds" parameterType="String">
        delete from special_work where special_id in 
        <foreach item="specialId" collection="array" open="(" separator="," close=")">
            #{specialId}
        </foreach>
    </delete>
</mapper>